codepen
sweetalert
GDWEB


최종 프로젝트를 진행하는 방법
	- 명세서를 읽는다.
	- VSCode를 실행하여 코드를 작성한다.
	- 교안을 보며 완성한다.
	- 관통 프로젝트에서는 "추천 알고리즘"이 많이 어렵다.
	
1. 무엇을 개발할 것인가? -> 명세서, 추천 알고리즘
	- 주제, 아이디어
2. 왜 개발하는 것인가?
	- 서비스의 목표, 주 고객이 누구인가
3. 어떻게 개발할 것인가?
	- 기술 스택, 디자인 컨셉, 일정 및 업무분담 등
	
**비판 X, 개발자가 주도해서 필요하겠다 싶은 것 X, 사용하는 사람의 입장에서 고려**
	- 금융 프로젝트 추천 사이트 : https://www.mibank.me/
	
아이디어 브레인 스토밍, 일정 및 업무 분담
	-> 노션, 구글 공유 드라이브
	-> github

- 백엔드 : 
	- ERD
	  -> drawio, ERDcloud
	  -> sqlite3 - ERD 자동 생성 도구 있음! -> 비추천!
	  -> 미리 회의하고! 직접 그리고 나서 진행할 것!
- 프론트엔드 : 
	- 컴포넌트 구조도
	- UI/UX 설계서
	  -> Figma
	  
- GPT 선생 적극 활용하기

** 주요 API
	- 한국수출입은행 환율정보 API
	- 카카오맵 API
	- 금융감독원 API
** 라이브러리
	- BootStrap
	- Chartjs
	- Django REST Framework


1. 예 적금 금리 비교를 위한 추천 알고리즘.. 

- API..



2. 환율계산기 -> API 쓰는듯

3. 내 집 주변 은행 검색 -> 이거 딱 사이즈가 GPT에 자세하게 하면 나올듯 .. ? 아님 그 마스터코드에 있던것 같기도
	- 주말에 조금 준비를 해야할것같은.. 느낌? 
	
4. 상품추천 (집값의 몇퍼를 몫돈으로 마련하고 싶은 상황 ... 여기서 상품을 추천하는 쪽으로 가보자!)
	- 자가마련을 위한 재테크 상품을 추천해야하고
	- 부동산이 비싸니까 좀 길게 ? 보는 방향으로 상품을 추천하는게 좋을것같은데.. 
	- 사회초년생이면 아무래도 금융쪽 지식이 많이 약할 것 같으니까
	- 원하는 집값(금액)이 있다면, -> 추천 알고리즘 몇 년 정도의 상품을 가입해야하는지.. 
	- 인풋(월 단위 저축) -> 이자를 생각해서, 몇년동안 돈을 넣으면 이 몫돈마련(보증금이라던지..) 구할 수 있는지. ( + 할수있으면 대출까지) 

	- 집값을 입력한다면, 거기에 따른 몫돈 퍼센티지 입력하면 -> 집값의 몇퍼 => 몫돈
	- 이 몫돈을 어떤 상품을 이용해야지 가장 빠른 기간에 일정 금액을 적금또는 예금을 해서 마련할 수 있을지..
	
	
	
1. 메인 페이지
	- nav bar item 별 캡쳐딴거 회전목마로 보여주기
	- 추천방법은 회전목마~ 
	
2. 회원 커스터마이징
	- 이거는 그 마지막시간에 배운 수업내용
		- 회원관리 라이브러리 사용
		- 유저 필수 필드 = 유저이름, 이메일, 나이, 자산, 연봉, 가입한 상품 목록(이거도 따로 모델로 만들어야할듯! 유저를 외래키로)!
	
3. 예적금 금리 비교 - 상품 모델 필요 ... (API schema 대로 모델 만들어서)
	- 금융상품통합비교공시 API(https://finlife.fss.or.kr/finlife/main/contents.do?menuNo=700029)
	- 은행이랑 예치기간 비교... -> 클릭시 상세정보 필요
	- 가져온 데이터 DB 저장 
	- 태용 : 어차피 7일뒤 발표,, -> 처음 받아오고, dumpdata 넣어놓고있다가, 프론트 메인을 onMounted..
		- 이 때 그냥 비동기로 axios 나중에 불러와서 처리되더라도
		- 다른 페이지 구경하면서 저게 진행되도록 하려면.. 조회를 바로 진행하면서 DB 갱신을 하는게.. 어떤가 싶어서..
		- 말이쉽지.. ㅎㅎ -> 메인페이지 들어가는것 자체가 걍 db 최신화 1안, 안되면 1주일 마지막에 dumpdata -> loaddata
		- Django 의 filter(Qureyset API) 를 활용합니다. (이미 존재하는 상품이라면 통과, 없다면 저장)
	- 상세페이지에서는 상품 가입기능!
	- 도전과제 나중에 생각!! 
	
4. 환율 계산기
	- CORS 이슈 발생.. <- 이거 일단 지난수업 다시보기로 해결해봄... 
	- API 주소를 걍 허용하는 주소로 넣어주면 뭐 ,, 끝 ~
	- 한국 수출입 은행 환율정보 API
		- 두 가지 필요
		- 이 때는 API 만 바로 그냥 API 땡겨오기
		- 프론트단에서 처리하는 작업
		- 상대국가와 원화, 아마 환율기준이 달러일꺼니까 -> 좀 더 어드밴스드 셀렉트 걸어서..
		- 어차피 기준이 나온다는게 v-model -> v-model="상대기준" -> const 상대기준 = ref(1) 
		- const 우리나라 = 상대기준.value * 상대국가환율
5. 근처 은행 검색
	- 은행 검색 kakao Maps API
	- 위치와 은행을 선택 가능, 현 위치 기반 주변 은행 위치 검색
6. 커뮤니티(게시판)
	- CRUD
	- 본인이 작성한 게시글 및 댓글 삭제, 수정 가능하도록 구성
	
7. 프로필 페이지
	• 금융 상품 추천 알고리즘
8. README
9. 기타 (피난길의 원하는 추가기능)